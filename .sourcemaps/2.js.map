{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/validators/email.ts","../../src/pages/login/login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACZ;AAapC;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAX3B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yDAAS;aACV;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;aACpC;YACD,OAAO,EAAE;gBACP,yDAAS;aACV;SACF,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;ACb5B;AAAA;IAAA;IAcA,CAAC;IAZQ,sBAAO,GAAd,UAAe,OAAoB;QACjC,IAAM,EAAE,GAAG,4DAA4D,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAE5F,IAAI,EAAE,EAAC;YACL,OAAO,IAAI,CAAC;SACb;QAED,OAAO;YACL,cAAc,EAAE,IAAI;SACrB,CAAC;IAEJ,CAAC;IACH,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AChByC;AACiD;AACvB;AACpE,0CAA0C;AACe;AACD;AAChB;AAOxC;IAGE,mBAAmB,OAAsB,EAAS,WAA8B,EACvE,SAA0B,EAAS,WAAwB,EAC3D,YAA0B;QAFhB,YAAO,GAAP,OAAO,CAAe;QAAS,gBAAW,GAAX,WAAW,CAAmB;QACvE,cAAS,GAAT,SAAS,CAAiB;QAAS,gBAAW,GAAX,WAAW,CAAa;QAC3D,iBAAY,GAAZ,YAAY,CAAc;QAEjC,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC;YACjC,KAAK,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,EAAE,yEAAc,CAAC,OAAO,CAAC,CAAC,CAAC;YAC9E,QAAQ,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;SACnF,CAAC,CAAC;IACL,CAAC;IAED,6BAAS,GAAT;QAAA,iBA2BC;QA1BC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAC;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACnC;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC;iBACrF,IAAI,CAAE,kBAAQ;gBACb,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAE;oBAC3B,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,4DAAQ,CAAC,CAAC;gBACjC,CAAC,CAAC,CAAC;YACL,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAE;oBAC3B,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;wBAChC,OAAO,EAAE,KAAK,CAAC,OAAO;wBACtB,OAAO,EAAE;4BACP;gCACE,IAAI,EAAE,IAAI;gCACV,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF,CAAC,CAAC;oBACH,KAAK,CAAC,OAAO,EAAE,CAAC;gBAClB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;YACzC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;SACxB;IACH,CAAC;IAED,8BAAU,GAAV;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;IAED,qCAAiB,GAAjB;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IACzC,CAAC;IAhDU,SAAS;QAJrB,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;WACG;SAC1B,CAAC;wJAIgF;YAC5D,4EAAgD;YAC7C,MAAY;OALxB,SAAS,CAkDrB;IAAD,CAAC;AAAA;SAlDY,SAAS,e","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { LoginPage } from './login';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(LoginPage),\r\n  ],\r\n  exports: [\r\n    LoginPage\r\n  ]\r\n})\r\nexport class LoginPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { FormControl } from '@angular/forms';\r\n\r\nexport class EmailValidator {\r\n  \r\n  static isValid(control: FormControl){\r\n    const re = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/.test(control.value);\r\n    \r\n    if (re){\r\n      return null;\r\n    }\r\n    \r\n    return {\r\n      \"invalidEmail\": true\r\n    };\r\n    \r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.ts","import { Component } from '@angular/core';\r\nimport { \r\n  IonicPage,\r\n  NavController,\r\n  Loading,\r\n  LoadingController,\r\n  AlertController } from 'ionic-angular';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n//import { HomePage } from '../home/home';\r\nimport { AuthProvider } from '../../providers/auth/auth';\r\nimport { EmailValidator } from '../../validators/email';\r\nimport { TabsPage } from '../tabs/tabs';\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-login',\r\n  templateUrl: 'login.html',\r\n})\r\nexport class LoginPage {\r\n  public loginForm:FormGroup;  \r\n  public loading:Loading;\r\n  constructor(public navCtrl: NavController, public loadingCtrl: LoadingController,\r\n    public alertCtrl: AlertController, public formBuilder: FormBuilder,\r\n    public authProvider: AuthProvider) {\r\n\r\n    this.loginForm = formBuilder.group({\r\n      email: ['', Validators.compose([Validators.required, EmailValidator.isValid])],\r\n      password: ['', Validators.compose([Validators.minLength(6), Validators.required])]\r\n    });\r\n  }\r\n\r\n  loginUser(){\r\n    if (!this.loginForm.valid){\r\n      console.log(this.loginForm.value);\r\n    } else {\r\n      this.authProvider.loginUser(this.loginForm.value.email, this.loginForm.value.password)\r\n      .then( authData => {\r\n        this.loading.dismiss().then( () => {\r\n          this.navCtrl.setRoot(TabsPage);\r\n        });\r\n      }, error => {\r\n        this.loading.dismiss().then( () => {\r\n          let alert = this.alertCtrl.create({\r\n            message: error.message,\r\n            buttons: [\r\n              {\r\n                text: \"Ok\",\r\n                role: 'cancel'\r\n              }\r\n            ]\r\n          });\r\n          alert.present();          \r\n        });\r\n      });\r\n\r\n      this.loading = this.loadingCtrl.create();\r\n      this.loading.present();\r\n    }\r\n  }\r\n\r\n  goToSignup(){\r\n    this.navCtrl.push('SignupPage');\r\n  }\r\n\r\n  goToResetPassword(){\r\n    this.navCtrl.push('PasswordResetPage');\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}